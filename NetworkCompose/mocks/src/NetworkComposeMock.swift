//
// Updated on 06/18/24.
// Copyright Â© 2024. All rights reserved.
////
/// @Generated by Mockolo
///

import Foundation
import NetworkCompose

// MARK: - NetworkTaskMock

public class NetworkTaskMock: NetworkTask {
  // MARK: Lifecycle

  public init() {}

  // MARK: Public

  public private(set) var cancelCallCount = 0
  public var cancelHandler: (() -> Void)?

  public func cancel() {
    cancelCallCount += 1
    if let cancelHandler {
      cancelHandler()
    }
  }
}

// MARK: - NetworkSessionMock

public class NetworkSessionMock: NetworkSession {
  // MARK: Lifecycle

  public init() {}

  // MARK: Public

  public typealias SessionRequest = Any

  public private(set) var buildCallCount = 0
  public var buildHandler: ((Any, URL, [String: String]) throws -> (SessionRequest))?
  public private(set) var beginRequestCallCount = 0
  public var beginRequestHandler: ((SessionRequest, @escaping ((Result<ResponseInterface, NetworkError>) -> Void)) -> (NetworkTask))?

  public func build(_ request: some RequestInterface, withBaseURL baseURL: URL, andHeaders headers: [String: String]) throws -> SessionRequest {
    buildCallCount += 1
    if let buildHandler {
      return try buildHandler(request, baseURL, headers)
    }
    fatalError("buildHandler returns can't have a default value thus its handler must be set")
  }

  public func beginRequest(_ request: SessionRequest, completion: @escaping ((Result<ResponseInterface, NetworkError>) -> Void)) -> NetworkTask {
    beginRequestCallCount += 1
    if let beginRequestHandler {
      return beginRequestHandler(request, completion)
    }
    return NetworkTaskMock()
  }
}

// MARK: - ResponseDecoderMock

public class ResponseDecoderMock: ResponseDecoder {
  // MARK: Lifecycle

  public init() {}

  // MARK: Public

  public private(set) var decodeCallCount = 0
  public var decodeHandler: ((Any, Data) throws -> (Any))?

  public func decode<T: Decodable>(_ type: T.Type, from data: Data) throws -> T {
    decodeCallCount += 1
    if let decodeHandler {
      return try decodeHandler(type, data) as! T
    }
    fatalError("decodeHandler returns can't have a default value thus its handler must be set")
  }
}

// MARK: - ResponseInterfaceMock

public class ResponseInterfaceMock: ResponseInterface {
  // MARK: Lifecycle

  public init() {}
  public init(statusCode: Int = 0, data: Data) {
    self.statusCode = statusCode
    _data = data
  }

  // MARK: Public

  public private(set) var statusCodeSetCallCount = 0
  public private(set) var dataSetCallCount = 0

  public var statusCode = 0 { didSet { statusCodeSetCallCount += 1 } }

  public var data: Data {
    get { _data }
    set { _data = newValue }
  }

  // MARK: Private

  private var _data: Data! { didSet { dataSetCallCount += 1 } }
}
