<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "14957E63-41A7-4A0A-A711-0210BED9D699"
   type = "0"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "0FACB4D1-0B52-496A-A004-F768CD952C2F"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "../NetworkSwift/Core/SSLPinning/NetworkSecurityTrustImp.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "56"
            endingLineNumber = "56"
            landmarkName = "verifyServerTrust(with:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "A09D53E8-A061-4310-9FDA-03D65EABC4C0"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "../NetworkSwift/Queue/Implementation/QueueConstruction/NetworkKitQueueImp.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "126"
            endingLineNumber = "126"
            landmarkName = "sendRequest(_:andHeaders:allowReAuth:retryPolicy:completion:)"
            landmarkType = "7">
            <Locations>
               <Location
                  uuid = "A09D53E8-A061-4310-9FDA-03D65EABC4C0 - 815bad016645cb8d"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "NetworkSwift.NetworkKitQueueImp.sendRequest&lt;&#x3c4;_0_0 where &#x3c4;_1_0: NetworkSwift.NetworkRequest&gt;(_: &#x3c4;_1_0, andHeaders: Swift.Dictionary&lt;Swift.String, Swift.String&gt;, allowReAuth: Swift.Bool, retryPolicy: NetworkSwift.NetworkRetryPolicy, completion: (Swift.Result&lt;&#x3c4;_1_0.SuccessType, NetworkSwift.NetworkError&gt;) -&gt; ()) -&gt; ()"
                  moduleName = "Example"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/harrynguyen/Documents/Resources/NetworkSwift/NetworkSwift/Queue/Implementation/QueueConstruction/NetworkKitQueueImp.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "126"
                  endingLineNumber = "126"
                  offsetFromSymbolStart = "560">
               </Location>
               <Location
                  uuid = "A09D53E8-A061-4310-9FDA-03D65EABC4C0 - bc5bcedf0aa8549c"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 (Swift.Result&lt;&#x3c4;_1_0.SuccessType, NetworkSwift.NetworkError&gt;) -&gt; () in NetworkSwift.NetworkKitQueueImp.sendRequest&lt;&#x3c4;_0_0 where &#x3c4;_1_0: NetworkSwift.NetworkRequest&gt;(_: &#x3c4;_1_0, andHeaders: Swift.Dictionary&lt;Swift.String, Swift.String&gt;, allowReAuth: Swift.Bool, retryPolicy: NetworkSwift.NetworkRetryPolicy, completion: (Swift.Result&lt;&#x3c4;_1_0.SuccessType, NetworkSwift.NetworkError&gt;) -&gt; ()) -&gt; ()"
                  moduleName = "Example"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/harrynguyen/Documents/Resources/NetworkSwift/NetworkSwift/Queue/Implementation/QueueConstruction/NetworkKitQueueImp.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "127"
                  endingLineNumber = "127"
                  offsetFromSymbolStart = "656">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
