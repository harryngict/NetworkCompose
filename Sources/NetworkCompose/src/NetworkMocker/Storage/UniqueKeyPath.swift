//
//  UniqueKeyPath.swift
//  NetworkCompose
//
//  Created by Hoang Nguyen on 26/11/23.
//

import Foundation

public struct UniqueKeyPath: Sendable {
    private let path: String
    private let method: String

    init(path: String,
         method: String)
    {
        self.path = path
        self.method = method
    }

    /// A unique key generated by combining the HTTP method and path, replacing '/' with '_'.
    var key: String {
        return "\(method)_\(path)".replacingOccurrences(of: "/", with: "_")
    }
}

extension UniqueKeyPath: Hashable {
    public static func == (lhs: UniqueKeyPath, rhs: UniqueKeyPath) -> Bool {
        return lhs.path == rhs.path && lhs.method == rhs.method
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(path)
        hasher.combine(method)
    }
}
